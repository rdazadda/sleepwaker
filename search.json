[{"path":"https://rdazadda.github.io/sleepwaker/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Raymond Dacosta Azadda Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with sleepwaker","text":"guide demonstrates use sleepwaker process ActiGraph batch sleep export data behavioral research. package provides automated workflows sleep analysis physical activity research. ’ll learn: install load package Three common usage scenarios Complete workflow ActiLife export analysis-ready data use approach","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with sleepwaker","text":"Install development version GitHub: Load package:","code":"# Install sleepwaker devtools::install_github(\"rdazadda/sleepwaker\") library(sleepwaker)"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"input-requirements","dir":"Articles","previous_headings":"Understanding the Data Format","what":"Input Requirements","title":"Getting Started with sleepwaker","text":"Sleepwaker requires batch sleep export data ActiGraph ActiLife three columns: Subject Name: Unique identifier participant Bed Time: Datetime participant went bed (mm/dd/yyyy hh:mm:ss /PM) Bed Time: Datetime participant got bed (mm/dd/yyyy hh:mm:ss /PM) columns automatically included ActiLife batch sleep exports.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"example-data","dir":"Articles","previous_headings":"Understanding the Data Format","what":"Example Data","title":"Getting Started with sleepwaker","text":"Let’s create sample data representing ActiGraph batch sleep export: represents sleep periods detected Cole-Kripke Sadeh algorithms 2 participants across multiple days.","code":"batch.data <- data.frame(   \"Subject Name\" = c(\"P001\", \"P001\", \"P001\", \"P002\", \"P002\"),   \"In Bed Time\" = c(\"10/12/2024 11:00:00 PM\",                      \"10/13/2024 10:45:00 PM\",                     \"10/14/2024 11:15:00 PM\",                      \"10/12/2024 10:30:00 PM\",                     \"10/13/2024 11:00:00 PM\"),   \"Out Bed Time\" = c(\"10/13/2024 07:00:00 AM\",                       \"10/14/2024 06:45:00 AM\",                      \"10/15/2024 07:30:00 AM\",                       \"10/13/2024 06:30:00 AM\",                      \"10/14/2024 07:15:00 AM\"),   check.names = FALSE )  # View the data batch.data #>   Subject Name            In Bed Time           Out Bed Time #> 1         P001 10/12/2024 11:00:00 PM 10/13/2024 07:00:00 AM #> 2         P001 10/13/2024 10:45:00 PM 10/14/2024 06:45:00 AM #> 3         P001 10/14/2024 11:15:00 PM 10/15/2024 07:30:00 AM #> 4         P002 10/12/2024 10:30:00 PM 10/13/2024 06:30:00 AM #> 5         P002 10/13/2024 11:00:00 PM 10/14/2024 07:15:00 AM"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"scenario-1-format-sleep-periods-for-sleep-analysis","dir":"Articles","previous_headings":"Three Usage Scenarios","what":"Scenario 1: Format Sleep Periods for Sleep Analysis","title":"Getting Started with sleepwaker","text":"Use case: ’re conducting sleep research need formatted sleep periods. happened: Batch export reformatted subject log diary format Timestamps split separate date time columns Data ready sleep pattern analysis","code":"sleep.periods <- sleepwaker(batch.data,                              input.type = \"raw\",                              output.type = \"sleep\")  # View results sleep.periods #>   Subject Name    On Date     On Time   Off Date    Off Time Category #> 1         P001 10/12/2024 11:00:00 PM 10/13/2024 07:00:00 AM          #> 2         P001 10/13/2024 10:45:00 PM 10/14/2024 06:45:00 AM          #> 3         P001 10/14/2024 11:15:00 PM 10/15/2024 07:30:00 AM          #> 4         P002 10/12/2024 10:30:00 PM 10/13/2024 06:30:00 AM          #> 5         P002 10/13/2024 11:00:00 PM 10/14/2024 07:15:00 AM"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"scenario-2-convert-sleep-to-wake-periods-for-activity-analysis","dir":"Articles","previous_headings":"Three Usage Scenarios","what":"Scenario 2: Convert Sleep to Wake Periods for Activity Analysis","title":"Getting Started with sleepwaker","text":"Use case: ’re studying physical activity sedentary behavior need exclude sleep. happened: Sleep periods inverted create wake periods wake period represents time consecutive sleep episodes Notice: 5 sleep periods → 3 wake periods (n-1 per subject) n-1 periods?: final sleep period subsequent sleep pair , wake period can generated .","code":"wake.periods <- sleepwaker(batch.data,                             input.type = \"raw\",                             output.type = \"wake\")  # View results wake.periods #>   Subject Name    On Date     On Time   Off Date    Off Time Category #> 1         P001 10/13/2024 07:00:00 AM 10/13/2024 10:45:00 PM          #> 2         P001 10/14/2024 06:45:00 AM 10/14/2024 11:15:00 PM          #> 3         P002 10/13/2024 06:30:00 AM 10/13/2024 11:00:00 PM"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"scenario-3-generate-both-sleep-and-wake-periods","dir":"Articles","previous_headings":"Three Usage Scenarios","what":"Scenario 3: Generate Both Sleep and Wake Periods","title":"Getting Started with sleepwaker","text":"Use case: need sleep periods (sleep analysis) wake periods (activity analysis). happened: First step: Formatted sleep periods sleep analysis Second step: Generated wake periods sleep periods now datasets comprehensive analysis","code":"# Step 1: Create formatted sleep periods sleep.periods <- sleepwaker(batch.data,                              input.type = \"raw\",                              output.type = \"sleep\")  # Step 2: Convert sleep periods to wake periods wake.periods <- sleepwaker(sleep.periods,                             input.type = \"sleep\",                             output.type = \"wake\")  # Now you have both head(sleep.periods) #>   Subject Name    On Date     On Time   Off Date    Off Time Category #> 1         P001 10/12/2024 11:00:00 PM 10/13/2024 07:00:00 AM          #> 2         P001 10/13/2024 10:45:00 PM 10/14/2024 06:45:00 AM          #> 3         P001 10/14/2024 11:15:00 PM 10/15/2024 07:30:00 AM          #> 4         P002 10/12/2024 10:30:00 PM 10/13/2024 06:30:00 AM          #> 5         P002 10/13/2024 11:00:00 PM 10/14/2024 07:15:00 AM head(wake.periods) #>   Subject Name    On Date     On Time   Off Date    Off Time Category #> 1         P001 10/13/2024 07:00:00 AM 10/13/2024 10:45:00 PM          #> 2         P001 10/14/2024 06:45:00 AM 10/14/2024 11:15:00 PM          #> 3         P002 10/13/2024 06:30:00 AM 10/13/2024 11:00:00 PM"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"saving-results-to-files","dir":"Articles","previous_headings":"","what":"Saving Results to Files","title":"Getting Started with sleepwaker","text":"scenarios support direct export CSV: function displays confirmation message files saved successfully.","code":"# Save sleep periods sleep.periods <- sleepwaker(batch.data,                              input.type = \"raw\",                              output.type = \"sleep\",                             output.file = \"sleep.periods.csv\")  # Save wake periods   wake.periods <- sleepwaker(batch_data,                             input.type = \"raw\",                             output.type = \"wake\",                            output.file = \"wake.periods.csv\")"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"important-notes","dir":"Articles","previous_headings":"Saving Results to Files","what":"Important Notes","title":"Getting Started with sleepwaker","text":"Supported: - Raw → Sleep (formatting) Raw → Wake (formatting + inversion) Sleep → Wake (inversion) supported: - Wake → Sleep (cause data loss) ?: sleep periods inverted wake periods, final sleep period lost. Attempting reconstruct require guessing, scientifically invalid.","code":""},{"path":[]},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"issue-1-datetime-parsing-error","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Issue 1: Datetime Parsing Error","title":"Getting Started with sleepwaker","text":"Error message: Solution: Verify ActiLife export uses 12-hour time format /PM. Re-export necessary.","code":"Error: Could not parse datetime. Check format is MM/DD/YYYY HH:MM:SS AM/PM"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"issue-2-missing-required-columns","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Issue 2: Missing Required Columns","title":"Getting Started with sleepwaker","text":"Error message: Solution:Ensure CSV contains three required columns exactly named ActiLife batch sleep export.","code":"Error: Missing required columns: In Bed Time"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"issue-3-insufficient-data-warning","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Issue 3: Insufficient Data Warning","title":"Getting Started with sleepwaker","text":"Warning message: Explanation:Inversion requires least 2 sleep periods per subject. Subjects 1 sleep period skipped. Action: Review subject limited data (short monitoring period, device removal, algorithm failure).","code":"Warning: Subject P001 has fewer than 2 periods. Skipping."},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"documentation","dir":"Articles","previous_headings":"Getting Help","what":"Documentation","title":"Getting Started with sleepwaker","text":"Function help: Type ?sleepwaker R console Package overview: Type help(package = \"sleepwaker\") Online reference: https://rdazadda.github.io/sleepwaker/","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"support","dir":"Articles","previous_headings":"Getting Help","what":"Support","title":"Getting Started with sleepwaker","text":"Report bugs: GitHub Issues Ask questions: GitHub Discussions Email: rdazadda@alaska.edu","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"citation","dir":"Articles","previous_headings":"Getting Help","what":"Citation","title":"Getting Started with sleepwaker","text":"use sleepwaker research, please cite: Good luck research!","code":"Azadda, R.D. (2025). sleepwaker: Invert Sleep and Wake Periods from    Accelerometry Data. R package version 0.1.0.   https://github.com/rdazadda/sleepwaker"},{"path":"https://rdazadda.github.io/sleepwaker/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Raymond Dacosta Azadda. Author, maintainer.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Azadda R (2025). sleepwaker: Invert Sleep Wake Periods Accelerometry Data. R package version 0.1.0, https://github.com/rdazadda/sleepwaker.","code":"@Manual{,   title = {sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data},   author = {Raymond Dacosta Azadda},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/rdazadda/sleepwaker}, }"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"sleepwaker","dir":"","previous_headings":"","what":"Invert Sleep and Wake Periods from Accelerometry Data","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Automated processing ActiGraph sleep data behavioral/Physical research","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Sleepwaker package processes batch sleep export data ActiGraph ActiLife software converts formats suitable sleep analysis physical activity research. package addresses two critical needs: Sleep Researchers: Automatically formats batch sleep exports subject log diary format sleep pattern analysis. Activity Researchers: Inverts sleep periods wake periods, enabling sedentary behavior physical activity analysis constrained waking hours .","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"issue-1-manual-data-formatting","dir":"","previous_headings":"The Problem We Solved","what":"Issue 1: Manual Data Formatting","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"ActiGraph ActiLife software exports sleep data detected validated algorithms (Cole-Kripke adults, Sadeh youth), batch export format requires manual reformatting subject log diary format analyses. manual process time-consuming large datasets, error-prone, reproducible.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"issue-2-inflated-sedentary-time-estimates","dir":"","previous_headings":"The Problem We Solved","what":"Issue 2: Inflated Sedentary Time Estimates","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"analyzing 24-hour accelerometry (Actigraph) data without excluding sleep, sleep periods misclassified sedentary behavior, inflates sedentary time estimates. Standard ActiLife processing methods adequately handle populations irregular sleep patterns, making hard researchers distinguish sleep true waking sedentary behavior. fundamental measurement problem leads invalid conclusions sedentary patterns health associations.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"the-solution","dir":"","previous_headings":"","what":"The Solution","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Sleepwaker provides two automated workflows:","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"workflow-1-sleep-period-analysis","dir":"","previous_headings":"The Solution","what":"Workflow 1: Sleep Period Analysis","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Converts batch sleep export → subject log diary format sleep pattern analysis","code":"# Direct formatting for sleep research sleep.periods <- sleepwaker(data,                              input.type = \"raw\",                              output.type = \"sleep\")"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"workflow-2-wake-period-analysis","dir":"","previous_headings":"The Solution","what":"Workflow 2: Wake Period Analysis","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Inverts sleep periods → wake periods, enabling analysis waking behavior ","code":"# Inversion for activity research wake.periods <- sleepwaker(data,                             input.type = \"raw\",                             output.type = \"wake\")"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How It Works","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Sleepwaker implements three-step automated process: Extract: Reads batch sleep export data ActiGraph ActiLife (Cole-Kripke Sadeh algorithm output). Format: Converts subject log diary format separate date time columns. Invert: Applies temporal inversion algorithm generate wake periods consecutive sleep episodes Key Innovation: inversion algorithm pairs consecutive sleep periods chronologically, using end time sleep period N start wake period, start time sleep period N+1 end. creates complement periods representing true waking hours.","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"for-sleep-research","dir":"","previous_headings":"Why This Matters","what":"For Sleep Research","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Automates tedious data formatting, saving hours manual work Ensures consistency reproducibility across large studies Provides clean sleep period data ready immediate analysis Maintains full compatibility ActiLife sleep detection algorithms","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"for-physical-activity-research","dir":"","previous_headings":"Why This Matters","what":"For Physical Activity Research","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Prevents sedentary time inflation removing sleep estimates Enables valid comparisons sedentary behavior reflects waking patterns Improves measurement validity distinguishing true sedentary behavior sleep Fills critical methodological gap existing solutions methodology addresses fundamental limitation accelerometry-based sedentary behavior assessment validated ongoing research Center Alaska Native Health Research.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Getting Started Guide - Installation, examples, complete workflows Function Reference - Detailed documentation functions","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"use sleepwaker research, please cite:","code":"Azadda, R.D. (2025). sleepwaker: Invert Sleep and Wake Periods from    Accelerometry Data. R package version 0.1.0.   https://github.com/rdazadda/sleepwaker"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"package developed Numbers Team Center Alaska Native Health Research (CANHR), University Alaska Fairbanks.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Developer: Raymond Dacosta Azadda Email: rdazadda@alaska.edu Report Issues: GitHub Issues Affiliation: Center Alaska Native Health Research (CANHR)Institution: University Alaska Fairbanks","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Subject Log from Raw Sleep Data — create.subject.log","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"Convert batch export format subject log diary format splitting datetime separate date time columns. Optionally inverts sleep periods wake periods single step.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"","code":"create.subject.log(sleep.data, output.type = \"sleep\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"sleep.data Data frame columns 'Subject Name', 'Bed Time', 'Bed Time'. Datetime format must MM/DD/YYYY HH:MM:SS /PM output.type Character string: \"sleep\" sleep periods (default) \"wake\" wake periods","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"Data frame columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category'","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"","code":"sample_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\"),   \"In Bed Time\" = c(\"09/19/2024 11:00:00 PM\", \"09/20/2024 10:30:00 PM\"),   \"Out Bed Time\" = c(\"09/20/2024 07:00:00 AM\", \"09/21/2024 06:45:00 AM\"),   check.names = FALSE )  sleep_log <- create.subject.log(sample_data, output.type = \"sleep\") wake_log <- create.subject.log(sample_data, output.type = \"wake\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"Extracts essential columns required sleep period inversion batch sleep export data: Subject Name, Bed Time, Bed Time.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"","code":"extract.sleep.columns(data)"},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"data Data frame contain batch sleep export data columns 'Subject Name', 'Bed Time', 'Bed Time'","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"Data frame three columns: 'Subject Name', 'Bed Time', 'Bed Time'","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"","code":"sample_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\", \"S002\"),   \"In Bed Time\" = c(\"09/19/2024 11:00:00 PM\", \"09/20/2024 10:30:00 PM\",                     \"09/19/2024 11:15:00 PM\"),   \"Out Bed Time\" = c(\"09/20/2024 07:00:00 AM\", \"09/21/2024 06:45:00 AM\",                      \"09/20/2024 07:30:00 AM\"),   \"Other Column\" = c(1, 2, 3),   check.names = FALSE )  result <- extract.sleep.columns(sample_data)"},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert Sleep and Wake Periods — invert.periods","title":"Invert Sleep and Wake Periods — invert.periods","text":"Converts sleep periods wake periods vice versa pairing consecutive periods. end time period N becomes start time inverted period, start time period N+1 becomes end time, creating complement periods consecutive sleep wake episodes.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert Sleep and Wake Periods — invert.periods","text":"","code":"invert.periods(subject.log, period.type = \"sleep\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert Sleep and Wake Periods — invert.periods","text":"subject.log Data frame columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category' period.type Character string: \"sleep\" \"wake\" indicating input data type","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert Sleep and Wake Periods — invert.periods","text":"Data frame inverted periods format input. Output contains one fewer period per subject final period inverted without subsequent period","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Invert Sleep and Wake Periods — invert.periods","text":"inversion algorithm method processes subject independently, sorting periods chronologically pairing consecutive entries. Subjects fewer 2 periods skipped warning. Converting wake sleep permitted generates warning results compounded data loss.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invert Sleep and Wake Periods — invert.periods","text":"","code":"sleep_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\", \"S001\"),   \"On Date\" = c(\"09/19/2024\", \"09/20/2024\", \"09/21/2024\"),   \"On Time\" = c(\"11:00:00 PM\", \"10:30:00 PM\", \"11:15:00 PM\"),   \"Off Date\" = c(\"09/20/2024\", \"09/21/2024\", \"09/22/2024\"),   \"Off Time\" = c(\"07:00:00 AM\", \"06:45:00 AM\", \"07:30:00 AM\"),   \"Category\" = c(\"\", \"\", \"\"),   check.names = FALSE )  wake_data <- invert.periods(sleep_data, period.type = \"sleep\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data — sleepwaker-package","title":"sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data — sleepwaker-package","text":"Processes batch sleep export data accelerometry devices inverts sleep periods wake periods. Uses output validated sleep detection algorithms (Cole-Kripke (Adult), Sadeh (Youth)) create wake periods, enable researchers constrain physical activity analysis waking hours . prevents artificial inflation sedentary time estimates excluding sleep behavioral assessments. Provides automated workflow large-scale accelerometry studies.","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data — sleepwaker-package","text":"Maintainer: Raymond Dacosta Azadda rdazadda@alaska.edu","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"Converts sleep wake periods accelerometry batch export data. Uses output validated sleep detection algorithms (Cole-Kripke (Adult), Sadeh (Youth)) invert sleep periods wake periods, enables analysis constrained waking hours prevents artificial inflation sedentary time estimates.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"","code":"sleepwaker(data, input.type = \"raw\", output.type = \"sleep\", output.file = NULL)"},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"data Data frame contains either batch sleep export data columns 'Subject Name', 'Bed Time', 'Bed Time', already formatted sleep/wake periods columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category'. input.type Character string specify input data type: \"raw\" batch export, \"sleep\" formatted sleep periods, \"wake\" formatted wake periods. output.type Character string specify desired output: \"sleep\" sleep periods \"wake\" wake periods. output.file Optional character string specify CSV file path saving results. NULL (default), results returned saved file.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"Data frame columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category', representing either sleep wake periods specified.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"inversion algorithm let say  pairs consecutive periods, using end time period N start inverted period, start time period N+1 end. creates complement periods consecutive sleep wake episodes. Note output contains one fewer period per subject input, final period inverted without subsequent period. Wake sleep conversion blocked results compounded data loss recover original sleep periods.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"Cole, R. J., Kripke, D. F., Gruen, W., Mullaney, D. J., & Gillin, J. C. (1992). Automatic sleep/wake identification wrist activity. Sleep, 15(5), 461–469. https://doi.org/10.1093/sleep/15.5.461","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"","code":"# Create sample batch export data batch_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\", \"S002\"),   \"In Bed Time\" = c(\"09/19/2024 11:00:00 PM\", \"09/20/2024 10:30:00 PM\",                     \"09/19/2024 11:15:00 PM\"),   \"Out Bed Time\" = c(\"09/20/2024 07:00:00 AM\", \"09/21/2024 06:45:00 AM\",                      \"09/20/2024 07:30:00 AM\"),   check.names = FALSE )  # Convert raw data to sleep periods sleep_periods <- sleepwaker(batch_data, input.type = \"raw\",                             output.type = \"sleep\")  # Convert raw data to wake periods wake_periods <- sleepwaker(batch_data, input.type = \"raw\",                            output.type = \"wake\") #> Warning: Subject S002 has fewer than 2 periods. Skipping.  # Convert sleep periods to wake periods wake_from_sleep <- sleepwaker(sleep_periods, input.type = \"sleep\",                               output.type = \"wake\") #> Warning: Subject S002 has fewer than 2 periods. Skipping.  # \\donttest{ # Save results to CSV file wake_periods <- sleepwaker(batch_data, input.type = \"raw\",                            output.type = \"wake\",                            output.file = \"wake_periods.csv\") #> Warning: Subject S002 has fewer than 2 periods. Skipping. #> Results saved to: wake_periods.csv # }"}]
