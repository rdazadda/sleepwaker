[{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with sleepwaker","text":"vignette demonstrates use sleepwaker invert sleep periods wake periods accelerometry data, addressing fundamental methodological challenge physical activity research.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"the-methodological-problem","dir":"Articles","previous_headings":"Introduction","what":"The Methodological Problem","title":"Getting Started with sleepwaker","text":"analyzing 24-hour accelerometry data, researchers often inadvertently include sleep periods behavioral assessments. Sleep, typically spanning 6-9 hours per day, algorithmically classified sedentary behavior activity analysis software. creates several analytical problems: Artificial Inflation: Sedentary time estimates inflated 50-90% 24-hour period Conceptual Conflation: Sleep fundamentally different waking sedentary behavior Spurious Associations: Correlations “sedentary time” health outcomes may actually reflect sleep patterns Invalid Comparisons: -group differences may driven sleep rather waking behavior","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"the-solution-temporal-inversion","dir":"Articles","previous_headings":"Introduction","what":"The Solution: Temporal Inversion","title":"Getting Started with sleepwaker","text":"sleepwaker implements automated algorithm inverts sleep periods generate wake periods, enabling researchers constrain analysis waking hours .","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with sleepwaker","text":"Install development version GitHub: Load package:","code":"# Install devtools if needed if (!requireNamespace(\"devtools\", quietly = TRUE)) {     install.packages(\"devtools\") }  # Install sleepwaker devtools::install_github(\"rdazadda/sleepwaker\") library(sleepwaker)"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"input-data-format","dir":"Articles","previous_headings":"Data Requirements","what":"Input Data Format","title":"Getting Started with sleepwaker","text":"sleepwaker processes batch sleep export data ActiGraph ActiLife software. required input format includes three essential columns:","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"creating-example-data","dir":"Articles","previous_headings":"Data Requirements","what":"Creating Example Data","title":"Getting Started with sleepwaker","text":"demonstration purposes, create sample batch export data: represents sleep periods detected Cole-Kripke Sadeh algorithms two participants across multiple days.","code":"batch_data <- data.frame(   \"Subject Name\" = c(\"P001\", \"P001\", \"P001\", \"P002\", \"P002\"),   \"In Bed Time\" = c(\"10/12/2024 11:00:00 PM\", \"10/13/2024 10:45:00 PM\",                     \"10/14/2024 11:15:00 PM\", \"10/12/2024 10:30:00 PM\",                     \"10/13/2024 11:00:00 PM\"),   \"Out Bed Time\" = c(\"10/13/2024 07:00:00 AM\", \"10/14/2024 06:45:00 AM\",                      \"10/15/2024 07:30:00 AM\", \"10/13/2024 06:30:00 AM\",                      \"10/14/2024 07:15:00 AM\"),   check.names = FALSE )  # Display the data batch_data #>   Subject Name            In Bed Time           Out Bed Time #> 1         P001 10/12/2024 11:00:00 PM 10/13/2024 07:00:00 AM #> 2         P001 10/13/2024 10:45:00 PM 10/14/2024 06:45:00 AM #> 3         P001 10/14/2024 11:15:00 PM 10/15/2024 07:30:00 AM #> 4         P002 10/12/2024 10:30:00 PM 10/13/2024 06:30:00 AM #> 5         P002 10/13/2024 11:00:00 PM 10/14/2024 07:15:00 AM"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"scenario-1-raw-data-to-sleep-periods","dir":"Articles","previous_headings":"Basic Usage","what":"Scenario 1: Raw Data to Sleep Periods","title":"Getting Started with sleepwaker","text":"Convert batch export data formatted sleep periods: Output Structure: - Timestamps split separate date time columns - Standardized format compatible analysis software - Category field available user annotations","code":"sleep_periods <- sleepwaker(   data = batch_data,   input.type = \"raw\",   output.type = \"sleep\" )  # Display results sleep_periods #>   Subject Name    On Date     On Time   Off Date    Off Time Category #> 1         P001 10/12/2024 11:00:00 PM 10/13/2024 07:00:00 AM          #> 2         P001 10/13/2024 10:45:00 PM 10/14/2024 06:45:00 AM          #> 3         P001 10/14/2024 11:15:00 PM 10/15/2024 07:30:00 AM          #> 4         P002 10/12/2024 10:30:00 PM 10/13/2024 06:30:00 AM          #> 5         P002 10/13/2024 11:00:00 PM 10/14/2024 07:15:00 AM"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"scenario-2-raw-data-to-wake-periods","dir":"Articles","previous_headings":"Basic Usage","what":"Scenario 2: Raw Data to Wake Periods","title":"Getting Started with sleepwaker","text":"Direct conversion batch export wake periods (common use case): Key Observation: - Input: 5 sleep periods (3 P001, 2 P002) - Output: 3 wake periods (2 P001, 1 P002) - participant n-1 wake periods n sleep periods","code":"wake_periods <- sleepwaker(   data = batch_data,   input.type = \"raw\",   output.type = \"wake\" )  # Display results wake_periods #>   Subject Name    On Date     On Time   Off Date    Off Time Category #> 1         P001 10/13/2024 07:00:00 AM 10/13/2024 10:45:00 PM          #> 2         P001 10/14/2024 06:45:00 AM 10/14/2024 11:15:00 PM          #> 3         P002 10/13/2024 06:30:00 AM 10/13/2024 11:00:00 PM"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"scenario-3-sleep-to-wake-conversion","dir":"Articles","previous_headings":"Basic Usage","what":"Scenario 3: Sleep to Wake Conversion","title":"Getting Started with sleepwaker","text":"already formatted sleep periods, convert directly:","code":"wake_from_sleep <- sleepwaker(   data = sleep_periods,   input.type = \"sleep\",   output.type = \"wake\" )  # Verify equivalence with Scenario 2 identical(wake_periods, wake_from_sleep) #> [1] TRUE"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"temporal-pairing-logic","dir":"Articles","previous_headings":"Understanding the Inversion Algorithm","what":"Temporal Pairing Logic","title":"Getting Started with sleepwaker","text":"algorithm operates consecutive period pairing subject: sleep periods +1: Mathematical Definition: - Wake period start = Sleep period offset time - Wake period end = Sleep period +1 onset time","code":"Sleep Period i:   [Start_i] ---------- [End_i]                                         ↓ Wake Period:                    [End_i] ========== [Start_i+1]                                                    ↓ Sleep Period i+1:                          [Start_i+1] ---------- [End_i+1]"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"why-n-1-periods","dir":"Articles","previous_headings":"Understanding the Inversion Algorithm","what":"Why N-1 Periods?","title":"Getting Started with sleepwaker","text":"final sleep period subject inverted subsequent sleep period define wake period endpoint.","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"step-1-actigraph-data-collection","dir":"Articles","previous_headings":"Complete Research Workflow","what":"Step 1: ActiGraph Data Collection","title":"Getting Started with sleepwaker","text":"Deploy GT3X+ GT9X accelerometers Configure 24-hour wear protocol Collect data target monitoring period Download data using ActiLife software","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"step-2-sleep-detection","dir":"Articles","previous_headings":"Complete Research Workflow","what":"Step 2: Sleep Detection","title":"Getting Started with sleepwaker","text":"ActiLife: Wear Time Validation: Apply appropriate wear time algorithm Adults: Apply Cole-Kripke algorithm Youth/Children: Apply Sadeh algorithm Quality Review: Manually review flagged periods needed","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"step-3-batch-export","dir":"Articles","previous_headings":"Complete Research Workflow","what":"Step 3: Batch Export","title":"Getting Started with sleepwaker","text":"Navigate File → Batch Processing → Sleep Export Select participants Export format: CSV Save : BatchSleepExportDetails.csv","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"step-4-r-processing","dir":"Articles","previous_headings":"Complete Research Workflow","what":"Step 4: R Processing","title":"Getting Started with sleepwaker","text":"","code":"library(sleepwaker) library(readr)  # Import batch export sleep_data <- read_csv(\"BatchSleepExportDetails.csv\")  # Generate wake periods wake_data <- sleepwaker(   data = sleep_data,   input.type = \"raw\",   output.type = \"wake\",   output.file = \"wake_periods_final.csv\" )  # View summary cat(\"Processed\", length(unique(wake_data$`Subject Name`)), \"participants\\n\")"},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"Getting Started with sleepwaker","text":"Package Overview: help(package = \"sleepwaker\") Function Help: ?sleepwaker Bug Reports: GitHub Issues","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Getting Started with sleepwaker","text":"Cole, R. J., Kripke, D. F., Gruen, W., Mullaney, D. J., & Gillin, J. C. (1992). Automatic sleep/wake identification wrist activity. Sleep, 15(5), 461-469. Sadeh, ., Sharkey, K. M., & Carskadon, M. . (1994). Activity-based sleep-wake identification: empirical test methodological issues. Sleep, 17(3), 201-207.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/articles/getting-started.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"Getting Started with sleepwaker","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] sleepwaker_0.1.0 #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     #>  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 #>  [9] rmarkdown_2.30    lifecycle_1.0.4   cli_3.6.5         pkgdown_2.1.3     #> [13] sass_0.4.10       textshaping_1.0.4 jquerylib_0.1.4   systemfonts_1.3.1 #> [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        evaluate_1.0.5    #> [21] bslib_0.9.0       yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       #> [25] fs_1.6.6"},{"path":"https://rdazadda.github.io/sleepwaker/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Raymond Dacosta Azadda. Author, maintainer.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Azadda R (2025). sleepwaker: Invert Sleep Wake Periods Accelerometry Data. R package version 0.1.0, https://github.com/rdazadda/sleepwaker.","code":"@Manual{,   title = {sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data},   author = {Raymond Dacosta Azadda},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/rdazadda/sleepwaker}, }"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"sleepwaker package provides automated methods inverting sleep periods wake periods accelerometry data. addresses fundamental methodological challenge physical activity research: artificial inflation sedentary time estimates sleep periods included 24-hour behavioral assessments.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"the-scientific-problem","dir":"","previous_headings":"Overview","what":"The Scientific Problem","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Current accelerometry studies analyzing 24-hour periods often include sleep part measurement window. However, sleep periods (typically 6-9 hours) algorithmically classified sedentary behavior, resulting : Sedentary time estimates inflated 50-90% 24-hour period Conflation sleep true waking sedentary behavior Spurious associations “sedentary time” health outcomes may driven sleep patterns rather waking behavior Inability accurately quantify waking sedentary behavior patterns","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"the-solution","dir":"","previous_headings":"Overview","what":"The Solution","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"sleepwaker implements automated inversion algorithm : Extracts sleep periods detected validated algorithms (Cole-Kripke, Sadeh) Identifies consecutive sleep episodes chronologically Inverts temporal structure generate complement wake periods Produces wake-period data suitable constraining behavioral analysis waking hours approach enables researchers exclude sleep sedentary behavior assessments, yielding accurate characterizations waking behavioral patterns.","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"core-functionality","dir":"","previous_headings":"Key Features","what":"Core Functionality","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"One-Step Processing: Streamlined workflow batch sleep export wake periods Algorithm Compatibility: Supports output Cole-Kripke (adult) Sadeh (youth) sleep detection algorithms Flexible Input Handling: Processes raw batch exports pre-formatted sleep/wake data Multi-Subject Scalability: Efficiently handles large datasets hundreds participants Quality Validation: Built-checks data integrity format compliance","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"research-applications","dir":"","previous_headings":"Key Features","what":"Research Applications","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Sedentary Behavior Studies: Accurate quantification waking sedentary time Physical Activity Research: Analysis MVPA constrained waking hours Sleep-Wake Pattern Analysis: Investigation behavioral rhythms Epidemiological Studies: Large-scale population health assessments Intervention Research: Pre-post comparisons waking behavior patterns","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development Version","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Install development version GitHub:","code":"# Install devtools if not already installed if (!requireNamespace(\"devtools\", quietly = TRUE)) {     install.packages(\"devtools\") }  # Install sleepwaker devtools::install_github(\"rdazadda/sleepwaker\")"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"system-requirements","dir":"","previous_headings":"Installation","what":"System Requirements","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"R (≥ 3.5.0) Compatible Windows, macOS, Linux operating systems","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"basic-workflow","dir":"","previous_headings":"Usage","what":"Basic Workflow","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"","code":"library(sleepwaker) library(readr)  # Load ActiGraph batch sleep export data sleep_data <- read_csv(\"BatchSleepExportDetails.csv\")  # Convert sleep periods to wake periods wake_periods <- sleepwaker(   data = sleep_data,   input.type = \"raw\",   output.type = \"wake\" )  # Export results for downstream analysis write.csv(wake_periods, \"wake_periods.csv\", row.names = FALSE)"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"direct-export-to-file","dir":"","previous_headings":"Usage > Advanced Usage","what":"Direct Export to File","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"","code":"# Process and save in single step wake_periods <- sleepwaker(   data = sleep_data,   input.type = \"raw\",   output.type = \"wake\",   output.file = \"wake_periods.csv\" )"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"multi-step-processing","dir":"","previous_headings":"Usage > Advanced Usage","what":"Multi-Step Processing","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"","code":"# Step 1: Generate formatted sleep periods sleep_periods <- sleepwaker(   data = sleep_data,   input.type = \"raw\",   output.type = \"sleep\" )  # Step 2: Perform inversion wake_periods <- sleepwaker(   data = sleep_periods,   input.type = \"sleep\",   output.type = \"wake\" )"},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"the-inversion-algorithm","dir":"","previous_headings":"Methodological Details","what":"The Inversion Algorithm","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"core algorithm implements temporal inversion consecutive period pairing: Input: Chronologically ordered sleep periods subjectProcess: periods +1: Wake period start = Sleep period end time Wake period end = Sleep period +1 start time Output: Wake periods representing intervals consecutive sleep episodes Important: algorithm generates n-1 wake periods n sleep periods per subject, final sleep period lacks subsequent period pairing.","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"input-format-raw-batch-export","dir":"","previous_headings":"Methodological Details > Data Format Requirements","what":"Input Format (Raw Batch Export)","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Required columns: Subject Name: Participant identifier Bed Time: Sleep onset timestamp (MM/DD/YYYY HH:MM:SS /PM) Bed Time: Sleep offset timestamp (MM/DD/YYYY HH:MM:SS /PM)","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"output-format-wake-periods","dir":"","previous_headings":"Methodological Details > Data Format Requirements","what":"Output Format (Wake Periods)","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Generated columns: Subject Name: Participant identifier Date: Wake period start date Time: Wake period start time (12-hour format) Date: Wake period end date Time: Wake period end time (12-hour format) Category: User annotation field (empty default)","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"supported-sleep-detection-algorithms","dir":"","previous_headings":"Methodological Details","what":"Supported Sleep Detection Algorithms","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"sleepwaker processes output validated accelerometry sleep detection algorithms: Cole-Kripke Algorithm (Cole et al., 1992): Validated adult populations Sadeh Algorithm (Sadeh et al., 1994): Validated pediatric adolescent populations Compatible Formats: batch export matching required column structure","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"step-1-data-collection","dir":"","previous_headings":"Example: Complete Research Workflow","what":"Step 1: Data Collection","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Deploy ActiGraph accelerometers 24-hour monitoring Retrieve devices download data using ActiLife software Adults: Cole-Kripke algorithm Youth: Sadeh algorithm","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"step-2-batch-export","dir":"","previous_headings":"Example: Complete Research Workflow","what":"Step 2: Batch Export","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"ActiLife software: Navigate : File → Batch Processing → Sleep Export Select participants Export CSV format Save : BatchSleepExportDetails.csv","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"step-3-data-processing-in-r","dir":"","previous_headings":"Example: Complete Research Workflow","what":"Step 3: Data Processing in R","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"","code":"library(sleepwaker) library(readr) library(dplyr)  # Import batch sleep export raw_data <- read_csv(\"BatchSleepExportDetails.csv\")  # Examine data structure glimpse(raw_data)  # Generate wake periods wake_data <- sleepwaker(   data = raw_data,   input.type = \"raw\",   output.type = \"wake\",   output.file = \"wake_periods_for_analysis.csv\" )  # Verify output cat(\"Processed\", length(unique(wake_data$`Subject Name`)), \"participants\\n\") cat(\"Generated\", nrow(wake_data), \"wake periods\\n\")  # Preview results head(wake_data)"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"step-4-integration-with-activity-analysis","dir":"","previous_headings":"Example: Complete Research Workflow","what":"Step 4: Integration with Activity Analysis","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Import wake_periods_for_analysis.csv activity analysis workflow constrain sedentary behavior MVPA calculations waking hours .","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"input-validation","dir":"","previous_headings":"Validation and Quality Assurance","what":"Input Validation","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"package implements comprehensive validation checks: Data frame structure verification Required column presence confirmation Datetime format parsing explicit error messaging Subject-level data sufficiency assessment (minimum 2 periods required)","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"edge-case-handling","dir":"","previous_headings":"Validation and Quality Assurance","what":"Edge Case Handling","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Single Period Subjects: Warning issued, subject skipped Irregular Sleep Patterns: Chronological sorting ensures correct pairing Missing Data: Explicit error messages troubleshooting guidance Format Inconsistencies: Validation clear error reporting","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"performance-characteristics","dir":"","previous_headings":"","what":"Performance Characteristics","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Processing Speed: Scales linearly dataset size Memory Efficiency: Processes data frame subsets subject Typical Performance: ~1000 participants processed <5 seconds standard hardware","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"use sleepwaker research, please cite:","code":"Azadda, R.D. (2025). sleepwaker: Invert Sleep and Wake Periods from    Accelerometry Data. R package version 0.1.0.    https://github.com/rdazadda/sleepwaker"},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"related-publications","dir":"","previous_headings":"Citation","what":"Related Publications","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"package supports methodology described : [manuscript citation go upon publication]","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Cole, R. J., Kripke, D. F., Gruen, W., Mullaney, D. J., & Gillin, J. C. (1992). Automatic sleep/wake identification wrist activity. Sleep, 15(5), 461-469. https://doi.org/10.1093/sleep/15.5.461 Sadeh, ., Sharkey, K. M., & Carskadon, M. . (1994). Activity-based sleep-wake identification: empirical test methodological issues. Sleep, 17(3), 201-207. https://doi.org/10.1093/sleep/17.3.201","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"documentation","dir":"","previous_headings":"Getting Help","what":"Documentation","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Function Reference: Browse detailed function documentation https://rdazadda.github.io/sleepwaker/reference/ Package Help: Access within R using help(package = \"sleepwaker\") Function Help: View specific function documentation ?sleepwaker","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"support","dir":"","previous_headings":"Getting Help","what":"Support","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Bug Reports: Submit issues https://github.com/rdazadda/sleepwaker/issues Feature Requests: Open discussion https://github.com/rdazadda/sleepwaker/discussions Questions: Contact maintainer post discussions","code":""},{"path":"https://rdazadda.github.io/sleepwaker/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Invert Sleep and Wake Periods from Accelerometry Data","text":"Development package supported research conducted University Alaska. Developed : Raymond Dacosta AzaddaMaintainer: Raymond Dacosta Azadda (rdazadda@alaska.edu)Repository: https://github.com/rdazadda/sleepwaker","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Subject Log from Raw Sleep Data — create.subject.log","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"Convert batch export format subject log diary format splitting datetime separate date time columns. Optionally inverts sleep periods wake periods single step.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"","code":"create.subject.log(sleep.data, output.type = \"sleep\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"sleep.data Data frame columns 'Subject Name', 'Bed Time', 'Bed Time'. Datetime format must MM/DD/YYYY HH:MM:SS /PM output.type Character string: \"sleep\" sleep periods (default) \"wake\" wake periods","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"Data frame columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category'","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/create.subject.log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating Subject Log from Raw Sleep Data — create.subject.log","text":"","code":"sample_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\"),   \"In Bed Time\" = c(\"09/19/2024 11:00:00 PM\", \"09/20/2024 10:30:00 PM\"),   \"Out Bed Time\" = c(\"09/20/2024 07:00:00 AM\", \"09/21/2024 06:45:00 AM\"),   check.names = FALSE )  sleep_log <- create.subject.log(sample_data, output.type = \"sleep\") wake_log <- create.subject.log(sample_data, output.type = \"wake\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"Extracts essential columns required sleep period inversion batch sleep export data: Subject Name, Bed Time, Bed Time.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"","code":"extract.sleep.columns(data)"},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"data Data frame contain batch sleep export data columns 'Subject Name', 'Bed Time', 'Bed Time'","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"Data frame three columns: 'Subject Name', 'Bed Time', 'Bed Time'","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/extract.sleep.columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Sleep Period Columns from Batch Sleep Export — extract.sleep.columns","text":"","code":"sample_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\", \"S002\"),   \"In Bed Time\" = c(\"09/19/2024 11:00:00 PM\", \"09/20/2024 10:30:00 PM\",                     \"09/19/2024 11:15:00 PM\"),   \"Out Bed Time\" = c(\"09/20/2024 07:00:00 AM\", \"09/21/2024 06:45:00 AM\",                      \"09/20/2024 07:30:00 AM\"),   \"Other Column\" = c(1, 2, 3),   check.names = FALSE )  result <- extract.sleep.columns(sample_data)"},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert Sleep and Wake Periods — invert.periods","title":"Invert Sleep and Wake Periods — invert.periods","text":"Converts sleep periods wake periods vice versa pairing consecutive periods. end time period N becomes start time inverted period, start time period N+1 becomes end time, creating complement periods consecutive sleep wake episodes.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert Sleep and Wake Periods — invert.periods","text":"","code":"invert.periods(subject.log, period.type = \"sleep\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert Sleep and Wake Periods — invert.periods","text":"subject.log Data frame columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category' period.type Character string: \"sleep\" \"wake\" indicating input data type","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert Sleep and Wake Periods — invert.periods","text":"Data frame inverted periods format input. Output contains one fewer period per subject final period inverted without subsequent period","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Invert Sleep and Wake Periods — invert.periods","text":"inversion algorithm method processes subject independently, sorting periods chronologically pairing consecutive entries. Subjects fewer 2 periods skipped warning. Converting wake sleep permitted generates warning results compounded data loss.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/invert.periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invert Sleep and Wake Periods — invert.periods","text":"","code":"sleep_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\", \"S001\"),   \"On Date\" = c(\"09/19/2024\", \"09/20/2024\", \"09/21/2024\"),   \"On Time\" = c(\"11:00:00 PM\", \"10:30:00 PM\", \"11:15:00 PM\"),   \"Off Date\" = c(\"09/20/2024\", \"09/21/2024\", \"09/22/2024\"),   \"Off Time\" = c(\"07:00:00 AM\", \"06:45:00 AM\", \"07:30:00 AM\"),   \"Category\" = c(\"\", \"\", \"\"),   check.names = FALSE )  wake_data <- invert.periods(sleep_data, period.type = \"sleep\")"},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data — sleepwaker-package","title":"sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data — sleepwaker-package","text":"Processes batch sleep export data accelerometry devices inverts sleep periods wake periods. Uses output validated sleep detection algorithms (Cole-Kripke (Adult), Sadeh (Youth)) create wake periods, enable researchers constrain physical activity analysis waking hours . prevents artificial inflation sedentary time estimates excluding sleep behavioral assessments. Provides automated workflow large-scale accelerometry studies.","code":""},{"path":[]},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sleepwaker: Invert Sleep and Wake Periods from Accelerometry Data — sleepwaker-package","text":"Maintainer: Raymond Dacosta Azadda rdazadda@alaska.edu","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"Converts sleep wake periods accelerometry batch export data. Uses output validated sleep detection algorithms (Cole-Kripke (Adult), Sadeh (Youth)) invert sleep periods wake periods, enables analysis constrained waking hours prevents artificial inflation sedentary time estimates.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"","code":"sleepwaker(data, input.type = \"raw\", output.type = \"sleep\", output.file = NULL)"},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"data Data frame contains either batch sleep export data columns 'Subject Name', 'Bed Time', 'Bed Time', already formatted sleep/wake periods columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category'. input.type Character string specify input data type: \"raw\" batch export, \"sleep\" formatted sleep periods, \"wake\" formatted wake periods. output.type Character string specify desired output: \"sleep\" sleep periods \"wake\" wake periods. output.file Optional character string specify CSV file path saving results. NULL (default), results returned saved file.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"Data frame columns 'Subject Name', 'Date', 'Time', 'Date', 'Time', 'Category', representing either sleep wake periods specified.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"inversion algorithm let say  pairs consecutive periods, using end time period N start inverted period, start time period N+1 end. creates complement periods consecutive sleep wake episodes. Note output contains one fewer period per subject input, final period inverted without subsequent period. Wake sleep conversion blocked results compounded data loss recover original sleep periods.","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"Cole, R. J., Kripke, D. F., Gruen, W., Mullaney, D. J., & Gillin, J. C. (1992). Automatic sleep/wake identification wrist activity. Sleep, 15(5), 461–469. https://doi.org/10.1093/sleep/15.5.461","code":""},{"path":"https://rdazadda.github.io/sleepwaker/reference/sleepwaker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverting Sleep and Wake Periods from Accelerometry Data — sleepwaker","text":"","code":"# Create sample batch export data batch_data <- data.frame(   \"Subject Name\" = c(\"S001\", \"S001\", \"S002\"),   \"In Bed Time\" = c(\"09/19/2024 11:00:00 PM\", \"09/20/2024 10:30:00 PM\",                     \"09/19/2024 11:15:00 PM\"),   \"Out Bed Time\" = c(\"09/20/2024 07:00:00 AM\", \"09/21/2024 06:45:00 AM\",                      \"09/20/2024 07:30:00 AM\"),   check.names = FALSE )  # Convert raw data to sleep periods sleep_periods <- sleepwaker(batch_data, input.type = \"raw\",                             output.type = \"sleep\")  # Convert raw data to wake periods wake_periods <- sleepwaker(batch_data, input.type = \"raw\",                            output.type = \"wake\") #> Warning: Subject S002 has fewer than 2 periods. Skipping.  # Convert sleep periods to wake periods wake_from_sleep <- sleepwaker(sleep_periods, input.type = \"sleep\",                               output.type = \"wake\") #> Warning: Subject S002 has fewer than 2 periods. Skipping.  # \\donttest{ # Save results to CSV file wake_periods <- sleepwaker(batch_data, input.type = \"raw\",                            output.type = \"wake\",                            output.file = \"wake_periods.csv\") #> Warning: Subject S002 has fewer than 2 periods. Skipping. #> Results saved to: wake_periods.csv # }"}]
